{"remainingRequest":"/usr/local/var/www/blog/blog/node_modules/thread-loader/dist/cjs.js!/usr/local/var/www/blog/blog/node_modules/babel-loader/lib/index.js!/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/usr/local/var/www/blog/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/local/var/www/blog/blog/src/components/loginOrRegister/register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/local/var/www/blog/blog/src/components/loginOrRegister/register.vue","mtime":1544090083925},{"path":"/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/usr/local/var/www/blog/blog/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapMutations, mapActions } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      show: false,\n      //表单数据\n      ruleForm: {\n        account: '',\n        password: '',\n        name: '',\n        yzm: '',\n        sms: ''\n      },\n      //验证码图片\n      captchas: '',\n      //验证码的key\n      captcha_key: '',\n      //是否显示验证码输入框\n      showcaptchas: false,\n      //是否显示短信验证\n      showSms: false,\n      //短信验证码的key\n      smskey: '',\n      //控制下一步按钮是否可以点击\n      isdis: false,\n      issendSms: false,\n      //自定义错误消息\n      errorMsg: '',\n      errorphone: '',\n      errorSms: '',\n      errorName: '',\n      //验证码刷新等待\n      isreloadYzm: true,\n      //注册按钮的显示\n      isZc: true,\n      fullscreenLoading: false,\n      rules: {\n        account: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 20,\n          message: '长度在 3 到 20 个字符',\n          trigger: 'blur'\n        }, {\n          pattern: /^1[34578]\\d{9}$/,\n          message: '手机号格式不正确',\n          trigger: 'blur'\n        }],\n        yzm: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }],\n        sms: [{\n          required: true,\n          message: '请输入短信验证码',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入昵称',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 10,\n          message: '长度在 2 到 10 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, // {pattern:/^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/, message:\"请输入密码，不可以全是字母或数字,且长度在8位以上\",trigger:'blur'},\n        {\n          min: 6,\n          max: 20,\n          message: '长度在 6 到 20 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.fullscreenLoading = true;\n    if (localStorage.verbState === 'true') this.$router.push({\n      name: 'index'\n    });\n  },\n  mounted: function mounted() {\n    setTimeout(function () {\n      this.fullscreenLoading = false;\n    }.bind(this), 200);\n  },\n  computed: _objectSpread({}, mapActions(['setUser'])),\n  methods: _objectSpread({}, mapMutations({\n    setverbState: 'SET_VERBSTATE',\n    setToken: 'SET_TOKEN'\n  }), {\n    register: function register() {\n      this.$emit('log', true);\n    },\n    getCap: function getCap(formName, field) {\n      var _this = this;\n\n      //验证手机号是否正确进行下一步\n      this.errorphone = ''; //使用了element ui 的form组件 个别字段验证  验证手机号\n\n      this.$refs[formName].validateField(field, function (valid) {\n        if (valid === '') {\n          //验证手机获取图片验证码\n          var paramObj = {\n            phone: _this.ruleForm.account\n          };\n\n          _this.$server.getCaptchas(paramObj).then(function (data) {\n            //把获取到的图片和key 传递给下一个步骤\n            _this.captchas = data.captcha_image_content;\n            _this.captcha_key = data.captcha_key;\n            _this.showcaptchas = true;\n            _this.isdis = true;\n            _this.isreloadYzm = true;\n          }).catch(function (err) {\n            if (err.status === 422) {\n              _this.errorphone = '电话号已存在';\n              return false;\n            }\n\n            if (err.status === 429) {\n              _this.errorphone = '操作次数错过，请稍后再试';\n              _this.showcaptchas = false;\n              return false;\n            }\n          });\n        }\n      });\n    },\n    //监听用户是否改变手机号 重新获取验证码\n    oninput: function oninput() {\n      this.isdis = false;\n      this.showcaptchas = false;\n      this.ruleForm.yzm = '';\n    },\n    reloadYzm: function reloadYzm() {\n      var _this2 = this;\n\n      this.isreloadYzm = false;\n      setTimeout(function () {\n        _this2.getCap('ruleForm', 'account');\n      }, 500);\n    },\n    checkYzm: function checkYzm(formName, field, event) {\n      var _this3 = this;\n\n      //请空自定义消息\n      this.errorMsg = ''; //使用了element ui 的form组件 个别字段验证 验证 验证码\n\n      this.$refs[formName].validateField(field, function (valid) {\n        if (valid === '') {\n          var paramObj = {\n            captcha_key: _this3.captcha_key,\n            captcha_code: _this3.ruleForm.yzm\n          };\n\n          _this3.$server.checkYzm(paramObj).then(function (data) {\n            var num = 60;\n            var time = setInterval(function () {\n              event.target.innerHTML = num;\n              num--;\n\n              if (num === 0) {\n                clearInterval(time);\n                _this3.issendSms = false;\n                event.target.innerHTML = '发送短信';\n              }\n            }, 1000);\n            _this3.issendSms = true; //存入验证短信验证码的key\n\n            _this3.smskey = data.key; //显示密码 昵称等输入框\n\n            _this3.showSms = true;\n          }).catch(function (err) {\n            if (err.status === 401) {\n              _this3.getCap('ruleForm', 'yzm');\n\n              _this3.errorMsg = '验证码错误';\n              return false;\n            } else if (err.status === 429) {\n              _this3.errorMsg = '操作次数过多，请稍后再试'; //让输入验证码input 消失\n\n              _this3.isdis = false;\n              _this3.showcaptchas = false;\n              _this3.ruleForm.yzm = '';\n              return false;\n            } else if (err.status === 422) {\n              _this3.errorMsg = '图片验证码已失效,点就图片重新获取';\n              return false;\n            }\n          });\n        }\n      });\n    },\n    //提交注册\n    regNow: function regNow(formName, field1, field2, field3) {\n      var _this4 = this;\n\n      // console.log(1);\n      //name\n      var name = ''; //pass\n\n      var pass = ''; //sms\n      // let sms = '';\n      //按钮控制\n\n      this.isZc = false; //昵称验证\n\n      this.$refs[formName].validateField(field1, function (valid) {\n        name = valid;\n      }); //密码验证\n\n      this.$refs[formName].validateField(field2, function (valid) {\n        pass = valid;\n      }); //短信验证码验证\n\n      if (pass === '' && name === '') {\n        this.$refs[formName].validateField(field3, function (valid) {\n          if (valid === '') {\n            //判断短信验证码是否完成注册\n            var paramObj = {\n              verification_key: _this4.smskey,\n              password: _this4.ruleForm.password,\n              name: _this4.ruleForm.name,\n              phone: _this4.ruleForm.account,\n              verification_code: _this4.ruleForm.sms\n            };\n\n            _this4.$server.regNow(paramObj).then(function (data) {\n              var token = data.meta.access_token; //把注册后的token 存储在vuex 中 还有登录状态\n\n              _this4.setverbState(true);\n\n              _this4.setToken(token); //使用localStorage 存储登录信息\n\n\n              localStorage.setItem('access_token', token);\n              localStorage.setItem('verbState', 'true'); //获取user基本信息\n\n              _this4.setUser; //登录成功后的提示信息\n\n              _this4.$message({\n                message: '注册成功，开始您的流域',\n                type: 'success'\n              }); //判断按钮状态\n\n\n              _this4.isZc = true; //跳转到主页\n\n              _this4.$router.push({\n                name: 'index'\n              });\n            }).catch(function (err) {\n              // eslint-disable-next-line no-console\n              console.log(err);\n\n              if (err.status === 422) {\n                _this4.errorName = '昵称已存在'; //判断按钮状态\n\n                _this4.isZc = true;\n                return false;\n              } else if (err.status === 401) {\n                _this4.errorSms = '验证码错误'; //判断按钮状态\n\n                _this4.isZc = true;\n                return false;\n              } else if (err.status === 423) {\n                _this4.errorSms = '验证码失效，请重新发送';\n\n                _this4.getCap('ruleForm', 'account'); //判断按钮状态\n\n\n                _this4.isZc = true;\n                return false;\n              }\n            });\n          }\n        });\n      }\n    }\n  })\n};",null]}