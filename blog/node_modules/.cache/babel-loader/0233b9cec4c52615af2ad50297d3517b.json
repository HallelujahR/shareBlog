{"remainingRequest":"/usr/local/var/www/blog/blog/node_modules/babel-loader/lib/index.js!/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/usr/local/var/www/blog/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/local/var/www/blog/blog/src/components/loginOrRegister/register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/local/var/www/blog/blog/src/components/loginOrRegister/register.vue","mtime":1544687531107},{"path":"/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/usr/local/var/www/blog/blog/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapMutations, mapActions } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      show: false,\n      //表单数据\n      ruleForm: {\n        account: '',\n        password: '',\n        name: '',\n        yzm: '',\n        sms: ''\n      },\n      //验证码图片\n      captchas: '',\n      //验证码的key\n      captcha_key: '',\n      //是否显示验证码输入框\n      showcaptchas: false,\n      //是否显示短信验证\n      showSms: false,\n      //短信验证码的key\n      smskey: '',\n      //控制下一步按钮是否可以点击\n      isdis: false,\n      issendSms: false,\n      //自定义错误消息\n      errorMsg: '',\n      errorphone: '',\n      errorSms: '',\n      errorName: '',\n      //验证码刷新等待\n      isreloadYzm: true,\n      //注册按钮的显示\n      isZc: true,\n      Loading: true,\n      rules: {\n        account: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 20,\n          message: '长度在 3 到 20 个字符',\n          trigger: 'blur'\n        }, {\n          pattern: /^1[34578]\\d{9}$/,\n          message: '手机号格式不正确',\n          trigger: 'blur'\n        }],\n        yzm: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }],\n        sms: [{\n          required: true,\n          message: '请输入短信验证码',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入昵称',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 10,\n          message: '长度在 2 到 10 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, // {pattern:/^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/, message:\"请输入密码，不可以全是字母或数字,且长度在8位以上\",trigger:'blur'},\n        {\n          min: 6,\n          max: 20,\n          message: '长度在 6 到 20 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.fullscreenLoading = true;\n    if (localStorage.verbState === 'true') this.$router.push({\n      name: 'index'\n    });\n  },\n  mounted: function mounted() {\n    setTimeout(function () {\n      this.Loading = false;\n    }.bind(this), 200);\n  },\n  computed: _objectSpread({}, mapActions(['setUser'])),\n  methods: _objectSpread({}, mapMutations({\n    setverbState: 'SET_VERBSTATE',\n    setToken: 'SET_TOKEN'\n  }), {\n    register: function register() {\n      this.$emit('log', true);\n    },\n    getCap: function getCap(formName, field) {\n      var _this = this;\n\n      //验证手机号是否正确进行下一步\n      this.errorphone = ''; //使用了element ui 的form组件 个别字段验证  验证手机号\n\n      this.$refs[formName].validateField(field, function (valid) {\n        if (valid === '') {\n          //验证手机获取图片验证码\n          var paramObj = {\n            phone: _this.ruleForm.account\n          };\n\n          _this.$server.getCaptchas(paramObj).then(function (data) {\n            //把获取到的图片和key 传递给下一个步骤\n            _this.captchas = data.captcha_image_content;\n            _this.captcha_key = data.captcha_key;\n            _this.showcaptchas = true;\n            _this.isdis = true;\n            _this.isreloadYzm = true;\n          }).catch(function (err) {\n            if (err.status === 422) {\n              _this.errorphone = '电话号已存在';\n              return false;\n            }\n\n            if (err.status === 429) {\n              _this.errorphone = '操作次数错过，请稍后再试';\n              _this.showcaptchas = false;\n              return false;\n            }\n          });\n        }\n      });\n    },\n    //监听用户是否改变手机号 重新获取验证码\n    oninput: function oninput() {\n      this.isdis = false;\n      this.showcaptchas = false;\n      this.ruleForm.yzm = '';\n    },\n    reloadYzm: function reloadYzm() {\n      var _this2 = this;\n\n      this.isreloadYzm = false;\n      setTimeout(function () {\n        _this2.getCap('ruleForm', 'account');\n      }, 500);\n    },\n    checkYzm: function checkYzm(formName, field, event) {\n      var _this3 = this;\n\n      //请空自定义消息\n      this.errorMsg = ''; //使用了element ui 的form组件 个别字段验证 验证 验证码\n\n      this.$refs[formName].validateField(field, function (valid) {\n        if (valid === '') {\n          var paramObj = {\n            captcha_key: _this3.captcha_key,\n            captcha_code: _this3.ruleForm.yzm\n          };\n\n          _this3.$server.checkYzm(paramObj).then(function (data) {\n            var num = 60;\n            var time = setInterval(function () {\n              event.target.innerHTML = num;\n              num--;\n\n              if (num === 0) {\n                clearInterval(time);\n                _this3.issendSms = false;\n                event.target.innerHTML = '发送短信';\n              }\n            }, 1000);\n            _this3.issendSms = true; //存入验证短信验证码的key\n\n            _this3.smskey = data.key; //显示密码 昵称等输入框\n\n            _this3.showSms = true;\n          }).catch(function (err) {\n            if (err.status === 412) {\n              _this3.getCap('ruleForm', 'yzm');\n\n              _this3.errorMsg = '验证码错误';\n              return false;\n            } else if (err.status === 429) {\n              _this3.errorMsg = '操作次数过多，请稍后再试'; //让输入验证码input 消失\n\n              _this3.isdis = false;\n              _this3.showcaptchas = false;\n              _this3.ruleForm.yzm = '';\n              return false;\n            } else if (err.status === 422) {\n              _this3.errorMsg = '图片验证码已失效,点就图片重新获取';\n              return false;\n            }\n          });\n        }\n      });\n    },\n    //提交注册\n    regNow: function regNow(formName, field1, field2, field3) {\n      var _this4 = this;\n\n      // console.log(1);\n      //name\n      var name = ''; //pass\n\n      var pass = ''; //sms\n      // let sms = '';\n      //按钮控制\n\n      this.isZc = false; //昵称验证\n\n      this.$refs[formName].validateField(field1, function (valid) {\n        name = valid;\n      }); //密码验证\n\n      this.$refs[formName].validateField(field2, function (valid) {\n        pass = valid;\n      }); //短信验证码验证\n\n      if (pass === '' && name === '') {\n        this.$refs[formName].validateField(field3, function (valid) {\n          if (valid === '') {\n            //判断短信验证码是否完成注册\n            var paramObj = {\n              verification_key: _this4.smskey,\n              password: _this4.ruleForm.password,\n              name: _this4.ruleForm.name,\n              phone: _this4.ruleForm.account,\n              verification_code: _this4.ruleForm.sms\n            };\n\n            _this4.$server.regNow(paramObj).then(function (data) {\n              var token = data.meta.access_token; //把注册后的token 存储在vuex 中 还有登录状态\n\n              _this4.setverbState(true);\n\n              _this4.setToken(token); //使用localStorage 存储登录信息\n\n\n              localStorage.setItem('access_token', token);\n              localStorage.setItem('verbState', 'true'); //获取user基本信息\n\n              _this4.setUser; //登录成功后的提示信息\n\n              _this4.$message({\n                message: '注册成功，开始您的流域',\n                type: 'success'\n              }); //判断按钮状态\n\n\n              _this4.isZc = true; //跳转到主页\n\n              _this4.$router.push({\n                name: 'index'\n              });\n            }).catch(function (err) {\n              // eslint-disable-next-line no-console\n              console.log(err);\n\n              if (err.status === 422) {\n                _this4.errorName = '昵称已存在'; //判断按钮状态\n\n                _this4.isZc = true;\n                return false;\n              } else if (err.status === 433) {\n                _this4.errorSms = '验证码错误'; //判断按钮状态\n\n                _this4.isZc = true;\n                return false;\n              } else if (err.status === 423) {\n                _this4.errorSms = '验证码失效，请重新发送';\n\n                _this4.getCap('ruleForm', 'account'); //判断按钮状态\n\n\n                _this4.isZc = true;\n                return false;\n              }\n            });\n          }\n        });\n      }\n    }\n  })\n};",{"version":3,"sources":["register.vue"],"names":[],"mappings":"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","sourcesContent":["<style scoped lang=\"scss\">\n@import \"../../assets/css/register.scss\";\n</style>\n\n<template>\n  <div id=\"register-body\"\n       v-loading=\"Loading\">\n    <div id=\"register\">\n      <div id=\"registerLogo\">\n        <img src=\"../../assets/riveredlogo.png\"\n             width=\"130px\"\n             alt=\"\">\n      </div>\n\n      <el-form :model=\"ruleForm\"\n               :rules=\"rules\"\n               ref=\"ruleForm\"\n               class=\"demo-ruleForm\">\n        <div class=\"register-user\">\n          <el-form-item prop=\"account\"\n                        :error=\"errorphone\">\n            <el-input placeholder=\"输入手机号\"\n                      suffix-icon=\"el-icon-phone\"\n                      v-model=\"ruleForm.account\"\n                      @input=\"oninput()\">\n              <el-button :disabled='isdis'\n                         @click=\"getCap('ruleForm', 'account')\"\n                         slot=\"append\">下一步</el-button>\n            </el-input>\n          </el-form-item>\n        </div>\n        <transition-group name=\"slide-fade\">\n          <div :key=\"1\"\n               class=\"register-user\"\n               v-if=\"showcaptchas\">\n            <el-form-item prop=\"yzm\"\n                          :error=\"errorMsg\">\n              <el-input placeholder=\"输入验证码\"\n                        suffix-icon=\"el-icon-document\"\n                        v-model=\"ruleForm.yzm\">\n\n                <el-button slot=\"prepend\"\n                           style=\"padding:0px;\">\n                  <img v-if=\"isreloadYzm\"\n                       @click=\"reloadYzm()\"\n                       width=\"120px\"\n                       style=\"margin-top:11px;\"\n                       :src=\"captchas\">\n                  <i v-else\n                     class=\"el-icon-loading\"></i>\n                </el-button>\n\n                <el-button :disabled='issendSms'\n                           slot=\"append\"\n                           @click=\"checkYzm('ruleForm', 'yzm', $event)\"\n                           style=\"width:84px;padding:0px;\">发送短信</el-button>\n              </el-input>\n            </el-form-item>\n          </div>\n\n          <div :key=\"2\"\n               class=\"register-user\"\n               v-if=\"showSms\">\n            <el-form-item :error=\"errorName\"\n                          prop=\"name\">\n              <el-input placeholder=\"输入昵称\"\n                        suffix-icon=\"el-icon-tickets\"\n                        v-model=\"ruleForm.name\">\n\n              </el-input>\n            </el-form-item>\n\n            <el-form-item prop=\"password\">\n              <el-input placeholder=\"请输入密码\"\n                        suffix-icon=\"el-icon-edit-outline\"\n                        v-model=\"ruleForm.password\"\n                        type=\"password\">\n\n              </el-input>\n            </el-form-item>\n\n            <el-form-item prop=\"sms\"\n                          :error=\"errorSms\">\n              <el-input placeholder=\"输入短信验证码\"\n                        suffix-icon=\"el-icon-message\"\n                        v-model=\"ruleForm.sms\">\n\n                <el-button slot=\"append\"\n                           @click=\"regNow('ruleForm','name', 'password', 'sms')\">\n                  <span v-if=\"isZc\">注册</span>\n                  <i v-else\n                     class=\"el-icon-loading\"></i>\n                </el-button>\n\n              </el-input>\n            </el-form-item>\n\n          </div>\n\n        </transition-group>\n      </el-form>\n\n      <div id=\"register-ds\">\n        <div id=\"register-title\">\n          <span>———————— 社交账号登录 ————————</span>\n        </div>\n        <div id=\"register-in\">\n          <img class=\"register-icon\"\n               width=\"25px;\"\n               src=\"../../assets/qq.png\" />\n          <img class=\"register-icon\"\n               width=\"25px;\"\n               src=\"../../assets/sina.png\" />\n        </div>\n\n      </div>\n      <div class=\"register\">\n        <router-link to='/login'>已有账号？立即登录</router-link>\n      </div>\n    </div>\n\n  </div>\n</template>\n<script>\nimport { mapMutations, mapActions } from 'vuex'\n\nexport default {\n  data () {\n    return {\n      show: false,\n      //表单数据\n      ruleForm: {\n        account: '',\n        password: '',\n        name: '',\n        yzm: '',\n        sms: '',\n      },\n      //验证码图片\n      captchas: '',\n      //验证码的key\n      captcha_key: '',\n      //是否显示验证码输入框\n      showcaptchas: false,\n      //是否显示短信验证\n      showSms: false,\n      //短信验证码的key\n      smskey: '',\n\n      //控制下一步按钮是否可以点击\n      isdis: false,\n      issendSms: false,\n\n      //自定义错误消息\n      errorMsg: '',\n      errorphone: '',\n      errorSms: '',\n      errorName: '',\n\n      //验证码刷新等待\n      isreloadYzm: true,\n\n      //注册按钮的显示\n      isZc: true,\n\n      Loading: true,\n\n      rules: {\n        account: [\n          { required: true, message: '请输入账号', trigger: 'blur' },\n          { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' },\n          { pattern: /^1[34578]\\d{9}$/, message: '手机号格式不正确', trigger: 'blur' }\n        ],\n        yzm: [\n          { required: true, message: '请输入验证码', trigger: 'blur' }\n        ],\n        sms: [\n          { required: true, message: '请输入短信验证码', trigger: 'blur' }\n        ],\n        name: [\n          { required: true, message: '请输入昵称', trigger: 'blur' },\n          { min: 2, max: 10, message: '长度在 2 到 10 个字符', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          // {pattern:/^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/, message:\"请输入密码，不可以全是字母或数字,且长度在8位以上\",trigger:'blur'},\n          { min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur' }\n        ],\n\n      }\n    }\n  },\n  created: function () {\n    this.fullscreenLoading = true;\n    if (localStorage.verbState === 'true') this.$router.push({ name: 'index' })\n  },\n  mounted: function () {\n\n    setTimeout(function () { this.Loading = false; }.bind(this), 200);\n\n  },\n  computed: {\n    ...mapActions([\n      'setUser',\n    ]),\n  },\n  methods: {\n    ...mapMutations({\n      setverbState: 'SET_VERBSTATE',\n      setToken: 'SET_TOKEN',\n    }),\n\n    register () {\n      this.$emit('log', true);\n    },\n    getCap (formName, field) {\n\n      //验证手机号是否正确进行下一步\n      this.errorphone = '';\n\n      //使用了element ui 的form组件 个别字段验证  验证手机号\n      this.$refs[formName].validateField(field, (valid) => {\n\n        if (valid === '') {\n\n          //验证手机获取图片验证码\n          let paramObj = {\n            phone: this.ruleForm.account,\n          };\n\n          this.$server.getCaptchas(paramObj).then(data => {\n\n            //把获取到的图片和key 传递给下一个步骤\n            this.captchas = data.captcha_image_content;\n            this.captcha_key = data.captcha_key;\n            this.showcaptchas = true;\n            this.isdis = true;\n            this.isreloadYzm = true;\n\n          }).catch(err => {\n\n            if (err.status === 422) {\n              this.errorphone = '电话号已存在';\n              return false;\n            }\n\n            if (err.status === 429) {\n              this.errorphone = '操作次数错过，请稍后再试';\n              this.showcaptchas = false;\n              return false;\n            }\n          })\n\n\n        }\n\n      })\n    },\n    //监听用户是否改变手机号 重新获取验证码\n    oninput () {\n      this.isdis = false;\n      this.showcaptchas = false;\n      this.ruleForm.yzm = '';\n    },\n    reloadYzm () {\n      this.isreloadYzm = false;\n      setTimeout(() => { this.getCap('ruleForm', 'account'); }, 500)\n    },\n    checkYzm (formName, field, event) {\n\n      //请空自定义消息\n      this.errorMsg = '';\n      //使用了element ui 的form组件 个别字段验证 验证 验证码\n      this.$refs[formName].validateField(field, (valid) => {\n\n        if (valid === '') {\n\n          let paramObj = {\n\n            captcha_key: this.captcha_key,\n            captcha_code: this.ruleForm.yzm,\n\n          };\n\n          this.$server.checkYzm(paramObj).then(data => {\n            let num = 60;\n\n            const time = setInterval(() => {\n\n              event.target.innerHTML = num;\n\n              num--;\n\n              if (num === 0) {\n\n                clearInterval(time);\n                this.issendSms = false;\n                event.target.innerHTML = '发送短信';\n\n              }\n\n            }, 1000);\n\n            this.issendSms = true;\n\n            //存入验证短信验证码的key\n            this.smskey = data.key;\n\n            //显示密码 昵称等输入框\n            this.showSms = true;\n          }).catch(err => {\n            if (err.status === 412) {\n              this.getCap('ruleForm', 'yzm');\n              this.errorMsg = '验证码错误';\n              return false;\n\n            } else if (err.status === 429) {\n\n              this.errorMsg = '操作次数过多，请稍后再试';\n              //让输入验证码input 消失\n              this.isdis = false;\n              this.showcaptchas = false;\n              this.ruleForm.yzm = '';\n              return false;\n\n            } else if (err.status === 422) {\n\n              this.errorMsg = '图片验证码已失效,点就图片重新获取';\n              return false;\n\n            }\n          });\n\n        }\n\n      })\n    },\n    //提交注册\n    regNow (formName, field1, field2, field3) {\n      // console.log(1);\n      //name\n      let name = '';\n      //pass\n      let pass = '';\n      //sms\n      // let sms = '';\n\n      //按钮控制\n      this.isZc = false;\n      //昵称验证\n      this.$refs[formName].validateField(field1, (valid) => {\n        name = valid;\n      });\n      //密码验证\n      this.$refs[formName].validateField(field2, (valid) => {\n        pass = valid;\n      });\n\n      //短信验证码验证\n      if (pass === '' && name === '') {\n\n        this.$refs[formName].validateField(field3, (valid) => {\n\n          if (valid === '') {\n\n            //判断短信验证码是否完成注册\n            let paramObj = {\n              verification_key: this.smskey,\n              password: this.ruleForm.password,\n              name: this.ruleForm.name,\n              phone: this.ruleForm.account,\n              verification_code: this.ruleForm.sms,\n\n            };\n\n            this.$server.regNow(paramObj).then(data => {\n\n              const token = data.meta.access_token;\n\n              //把注册后的token 存储在vuex 中 还有登录状态\n              this.setverbState(true);\n              this.setToken(token);\n\n\n              //使用localStorage 存储登录信息\n              localStorage.setItem('access_token', token);\n\n              localStorage.setItem('verbState', 'true');\n              //获取user基本信息\n              this.setUser;\n              //登录成功后的提示信息\n              this.$message({\n                message: '注册成功，开始您的流域',\n                type: 'success'\n              });\n\n              //判断按钮状态\n              this.isZc = true;\n\n              //跳转到主页\n              this.$router.push({ name: 'index' })\n\n            }).catch(err => {\n              // eslint-disable-next-line no-console\n              console.log(err);\n              if (err.status === 422) {\n\n                this.errorName = '昵称已存在';\n                //判断按钮状态\n                this.isZc = true;\n                return false;\n\n              } else if (err.status === 433) {\n\n                this.errorSms = '验证码错误';\n                //判断按钮状态\n                this.isZc = true;\n                return false;\n\n              } else if (err.status === 423) {\n\n                this.errorSms = '验证码失效，请重新发送';\n                this.getCap('ruleForm', 'account');\n                //判断按钮状态\n                this.isZc = true;\n                return false;\n\n              }\n\n            });\n\n          }\n\n        });\n      }\n\n\n    }\n\n  }\n\n}\n</script>"],"sourceRoot":"src/components/loginOrRegister"}]}