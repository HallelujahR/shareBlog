{"remainingRequest":"/usr/local/var/www/blog/blog/node_modules/babel-loader/lib/index.js!/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/usr/local/var/www/blog/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/local/var/www/blog/blog/src/components/loginOrRegister/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/local/var/www/blog/blog/src/components/loginOrRegister/login.vue","mtime":1543392928867},{"path":"/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/usr/local/var/www/blog/blog/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapMutations, mapActions } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      show: false,\n      ruleForm: {\n        account: '',\n        password: ''\n      },\n      rules: {\n        account: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 20,\n          message: '长度在 3 到 20 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 20,\n          message: '长度在 3 到 20 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState([\"verbState\"]), mapActions([\"setUser\"])),\n  mounted: function mounted() {\n    setTimeout(function () {\n      this.show = true;\n    }, 200);\n  },\n  methods: _objectSpread({}, mapMutations({\n    setverbState: 'SET_VERBSTATE',\n    setToken: 'SET_TOKEN'\n  }), {\n    submitForm: function submitForm(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var paramObj = {\n            username: _this.ruleForm.account,\n            password: _this.ruleForm.password\n          };\n          console.log(_this.$server);\n\n          _this.$server.login(paramObj).then(function (data) {\n            //用户的token\n            var token = data.access_token; //使用localStorage 存储登录信息\n\n            localStorage.setItem('access_token', token);\n            localStorage.setItem('verbState', 'true'); //把登录后的token 存储在vuex 中\n\n            _this.setverbState(true);\n\n            _this.setToken(token); //获取用户信息\n\n\n            _this.setUser; //登录成功后的提示信息\n\n            _this.$message({\n              message: '登录成功，开始您的流域',\n              type: 'success'\n            }); //登录成功跳转到首页\n\n\n            _this.$router.push({\n              name: 'index'\n            });\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    register: function register() {\n      this.$emit('reg', true);\n    }\n  })\n};",{"version":3,"sources":["login.vue"],"names":[],"mappings":"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","sourcesContent":["<style type=\"scoped\" lang=\"scss\">\n@import '@/assets/css/login.scss';\n</style>\n\n<template>\n\t<div>\n\t\t<div id=\"login\">\n\t\t\t<div id=\"login-title\">\n\t\t\t\t登录流域\n\t\t\t</div>\n\n\t\t\t<el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" class=\"demo-ruleForm\">\n\t\t\t\t<div class=\"login-user\">\n\t\t\t\t\t<el-form-item prop=\"account\">\n\t\t\t\t\t\t<el-input\n\t\t\t\t\t\t    placeholder=\"输入账号\"\n\t\t\t\t\t\t    suffix-icon=\"el-icon-phone\"\n\t\t\t\t\t\t    v-model=\"ruleForm.account\"\n\t\t\t\t\t\t    id=\"login-user-input\"\n\t\t\t\t\t\t    >\n\t\t\t\t\t\t</el-input>\n\t\t\t\t\t</el-form-item>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"login-user\">\n\t\t\t\t\t<el-form-item prop=\"password\">\n\t\t\t\t\t\t<el-input\n\t\t\t\t\t\t    placeholder=\"输入密码\"\n\t\t\t\t\t\t    suffix-icon=\"el-icon-edit\"\n\t\t\t\t\t\t    v-model=\"ruleForm.password\"\n\t\t\t\t\t\t    id=\"login-user-input2\"\n\t\t\t\t\t\t    type=\"password\"\n\t\t\t\t\t\t    >\n\t\t\t\t\t\t</el-input>\n\t\t\t\t\t</el-form-item>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"login-user\">\n\t\t\t\t\t<el-form-item>\n\t\t\t\t    \t<el-button class=\"login-btn\" type=\"primary\" @click=\"submitForm('ruleForm')\">立即登录</el-button>\n\t\t\t\t    \t<div class=\"register\">找回密码</div>\n\t\t\t\t    \t<div class=\"register\" @click=\"register()\" style=\"margin-left:200px;\">还没有账号？立即注册</div>\n\t\t\t\t    </el-form-item>\n\t\t\t\t</div>\n\t\t\t</el-form>\n\n\t\t\t<div id=\"login-ds\">\n\t\t\t\t<span style=\"float:left\">第三方登录:</span>\n\t\t\t\t<img class=\"login-icon\" src=\"@/assets/qqicon.png\" /> \n\t\t\t\t<img class=\"login-icon\" src=\"@/assets/weibo.png\" />\n\t\t\t</div>\n\t\t\t<div v-if=\"verbState\">\n\t\t\t\t{{verbState}}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport { mapState, mapMutations, mapActions } from 'vuex'\n\n\texport default {\n        data: function () {\n            return {\n                show: false,\n                ruleForm: {\n                    account: '',\n                    password: '',\n                },\n                rules: {\n                    account: [\n                        {required: true, message: '请输入账号', trigger: 'blur'},\n                        {min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur'}\n                    ],\n                    password: [\n                        {required: true, message: '请输入密码', trigger: 'blur'},\n                        {min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur'}\n                    ],\n                }\n            }\n        },\n\t\tcomputed:{\n\t\t\t...mapState([\n\t\t\t\t\"verbState\"\n\t\t\t]),\n\t\t\t...mapActions([\n\t\t\t\t\"setUser\",\n\t\t\t]),\n\n\t\t},\n\t    mounted:function(){\n\t        setTimeout(function(){ this.show = true} ,200);\n\t    },\n\t    methods:{\n            ...mapMutations({\n                setverbState: 'SET_VERBSTATE',\n                setToken: 'SET_TOKEN',\n            }),\n\n            submitForm: function (formName) {\n\n                this.$refs[formName].validate((valid) => {\n\n\n                    if (valid) {\n\n                        let paramObj = {\n                            username: this.ruleForm.account,\n                            password: this.ruleForm.password,\n                        };\n                        console.log(this.$server);\n                        this.$server.login(paramObj).then(data => {\n\n                            //用户的token\n                            const token = data.access_token;\n\n                            //使用localStorage 存储登录信息\n                            localStorage.setItem('access_token', token);\n                            localStorage.setItem('verbState', 'true');\n\n                            //把登录后的token 存储在vuex 中\n                            this.setverbState(true);\n                            this.setToken(token);\n\n                            //获取用户信息\n                            this.setUser;\n\n                            //登录成功后的提示信息\n                            this.$message({\n                                message: '登录成功，开始您的流域',\n                                type: 'success'\n                            });\n\n                            //登录成功跳转到首页\n                            this.$router.push({name: 'index'})\n\n                        })\n\n                    } else {\n                        console.log('error submit!!');\n                        return false;\n                    }\n                });\n            },\n            resetForm: function (formName) {\n                this.$refs[formName].resetFields();\n            },\n\t\t    register() {\n\t\t    \tthis.$emit('reg',true);\n\t\t    },\n\t\t    //获取用户数据\n\n\t    }\n\n\t}\n</script>"],"sourceRoot":"src/components/loginOrRegister"}]}