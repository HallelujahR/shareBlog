{"remainingRequest":"/usr/local/var/www/blog/blog/node_modules/thread-loader/dist/cjs.js!/usr/local/var/www/blog/blog/node_modules/babel-loader/lib/index.js!/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/usr/local/var/www/blog/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/local/var/www/blog/blog/src/components/User/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/local/var/www/blog/blog/src/components/User/index.vue","mtime":1547790966345},{"path":"/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.ends-with\";\nimport _objectSpread from \"/usr/local/var/www/blog/blog/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapMutations } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      state: false,\n      //判断是不是本人\n      user: {},\n      //用户基本信息\n      detail: {},\n      //用户详情\n      loading: true,\n      width: '',\n      height: 230,\n      //初始化背景图插件\n      croppa: {},\n      //初始化图片滑动放大缩小input range\n      sliderVal: 0,\n      sliderMin: 0,\n      sliderMax: 0,\n      root: '',\n      //网站api根目录\n      alterImgFlag: true,\n      //是否出现处理背景图片按钮\n      freshFlag: false,\n      //判断是否上传过图片\n      alterDetail: true,\n      //跳转到编辑个人资料开关\n      cursorFlag: false,\n      //控制鼠标在背景图上的样式\n      centerDialogVisible: false //修改头像的对话框控制\n\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['verbState', //登录状态\n  'token', //登录的用户的token\n  'self'])),\n  //监听路由变化\n  watch: {\n    $route: function $route() {\n      //获取网页url判断是否在更改详情页面\n      if (this.$route.path.endsWith('alterDetail')) this.alterDetail = false;\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    //获取浏览器窗口的宽度 然后赋值给背景图片宽度\n    this.width = window.screen.width; //判断是否登录\n\n    this.state = localStorage.getItem('verbState'); //获取路由传递过来的用户id\n\n    this.id = this.$route.params.id; //数据\n\n    var paramsObj = {\n      id: this.id //发送axios 获取传递过来id对用的用户的数据\n\n    };\n    this.$server.getInformation(paramsObj).then(function (data) {\n      //获取到用户的基本信息\n      _this.user = data; //获取到用户的详细信息\n\n      _this.detail = data.user_detail; //判断用户是否有背景图片 且是否是本人页面 然后更改高度\n      //之所以使用定时器 是因为我别无他法 只能用定时器延迟然后获取数据\n\n      setTimeout(function () {\n        if (_this.user.backgroundImg != null || _this.user.id == _this.self.id) {\n          _this.state = true;\n          _this.height = 430;\n        }\n      }, 200);\n    }).catch(function (err) {\n      // eslint-disable-next-line no-console\n      console.log(err);\n    });\n  },\n  mounted: function mounted() {\n    //网页加载状态\n    this.loading = false; //api地址\n\n    this.root = this.$URL; //获取网页url判断是否在更改详情页面\n\n    if (this.$route.path.endsWith('alterDetail')) this.alterDetail = false;\n  },\n  methods: _objectSpread({}, mapMutations({\n    setuser: 'SET_USER'\n  }), {\n    onFileTypeMismatch: function onFileTypeMismatch() {\n      this.$message({\n        message: '文件格式不对呦 😳',\n        type: 'warning'\n      });\n    },\n    onNewImage: function onNewImage() {\n      this.sliderVal = this.croppa.scaleRatio;\n      this.sliderMin = this.croppa.scaleRatio / 2;\n      this.sliderMax = this.croppa.scaleRatio * 5;\n    },\n    onSliderChange: function onSliderChange(evt) {\n      var increment = evt.target.value;\n      this.croppa.scaleRatio = +increment;\n    },\n    onZoom: function onZoom() {\n      // To prevent zooming out of range when using scrolling to zoom\n      // if (this.sliderMax && this.croppa.scaleRatio >= this.sliderMax) {\n      //   this.croppa.scaleRatio = this.sliderMax\n      // } else if (this.sliderMin && this.croppa.scaleRatio <= this.sliderMin) {\n      //   this.croppa.scaleRatio = this.sliderMin\n      // }\n      this.sliderVal = this.croppa.scaleRatio;\n    },\n    upload: function upload() {\n      var _this2 = this;\n\n      //判断是否有图片选中\n      if (!this.croppa.hasImage()) {\n        this.$message({\n          message: '你还没有选择图片 😳',\n          type: 'warning'\n        });\n        return false;\n      } //获取到文件 但是是blob 二进制资源\n\n\n      this.croppa.generateBlob(function (blob) {\n        //二进制转文件\n        var file = new File([blob], 'backImg', {\n          type: 'image/jpeg'\n        });\n        var fd = new FormData();\n        fd.append('image', file);\n        fd.append('type', 'backgroundImg'); //发送axios更改图片\n\n        _this2.$server.uploadImg(fd).then(function (data) {\n          //更改默认图片路径\n          _this2.detail.backgroundImg = data; //更改按钮状态\n\n          _this2.alterImgFlag = !_this2.alterImgFlag; //上传成功提示\n\n          _this2.$message({\n            type: 'success',\n            message: '上传成功 😊'\n          });\n        }).catch(function (err) {\n          // eslint-disable-next-line no-console\n          console.log('err', err);\n        });\n\n        return false;\n      });\n    },\n    alterImg: function alterImg() {\n      this.alterImgFlag = !this.alterImgFlag;\n      this.cursorFlag = !this.cursorFlag;\n      this.croppa.refresh();\n    },\n    removeBackgroundImg: function removeBackgroundImg() {\n      var _this3 = this;\n\n      this.$confirm('移除背景, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        //参数\n        var paramsObj = {\n          type: 'backgroundImg' //发送axios 删除图片\n\n        };\n\n        _this3.$server.deleteImg(paramsObj).then(function (data) {\n          if (data == 2) {\n            _this3.$message({\n              type: 'warning',\n              message: '还没有背景图 😓'\n            });\n\n            return false;\n          } //更改默认图片路径\n\n\n          _this3.detail.backgroundImg = ''; //触发插件移除\n\n          _this3.croppa.remove(); //成功提示\n\n\n          _this3.$message({\n            type: 'success',\n            message: '移除成功!'\n          }); //更改按钮状态\n\n\n          _this3.alterImgFlag = !_this3.alterImgFlag;\n        }).catch(function (err) {\n          // eslint-disable-next-line no-console\n          console.log(err);\n        });\n      }).catch(function () {\n        _this3.$message({\n          type: 'info',\n          message: '已取消'\n        });\n      });\n    },\n    alterDetails: function alterDetails() {\n      this.alterDetail = !this.alterDetail;\n    },\n    //更改头像的croppa 更改为圆圈\n    onInit: function onInit() {\n      this.croppa.addClipPlugin(function (ctx, x, y, w, h) {\n        /*\n         * ctx: canvas context\n         * x: start point (top-left corner) x coordination\n         * y: start point (top-left corner) y coordination\n         * w: croppa width\n         * h: croppa height\n        */\n        ctx.beginPath();\n        ctx.arc(x + w / 2, y + h / 2, w / 2, 0, 2 * Math.PI, true);\n        ctx.closePath();\n      });\n    },\n    //上传头像的方法\n    uploadAvatar: function uploadAvatar() {\n      var _this4 = this;\n\n      //判断是否有图片选中\n      if (!this.croppa.hasImage()) {\n        this.$message({\n          message: '你还没有选择图片 😳',\n          type: 'warning'\n        });\n        return false;\n      } //获取到文件 但是是blob 二进制资源\n\n\n      this.croppa.generateBlob(function (blob) {\n        //二进制转文件\n        var file = new File([blob], 'backImg', {\n          type: 'image/jpeg'\n        });\n        var fd = new FormData();\n        fd.append('image', file);\n        fd.append('type', 'avatar'); //发送axios更改图片\n\n        _this4.$server.uploadImg(fd).then(function (data) {\n          if (data == 2) {\n            //上传失败提示\n            _this4.$message({\n              type: 'success',\n              message: '上传失败 😓'\n            });\n\n            return false;\n          } //上传成功提示\n\n\n          _this4.$message({\n            type: 'success',\n            message: '上传成功 😊'\n          }); //更改默认图片路径\n\n\n          _this4.user.avatar = data;\n\n          _this4.setuser(_this4.user);\n\n          _this4.centerDialogVisible = false; //修改头像的对话框控制\n        }).catch(function (err) {\n          // eslint-disable-next-line no-console\n          console.log('err', err);\n        });\n\n        return false;\n      });\n    },\n    //点击取消修改头像按钮\n    noEditAvatar: function noEditAvatar() {\n      this.croppa.refresh();\n    },\n    //移除头像\n    removeAvatarImg: function removeAvatarImg() {\n      var _this5 = this;\n\n      this.$confirm('移除背景头像, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        //参数\n        var paramsObj = {\n          type: 'avatar' //发送axios 删除图片\n\n        };\n\n        _this5.$server.deleteImg(paramsObj).then(function (data) {\n          if (data == 2) {\n            _this5.$message({\n              type: 'warning',\n              message: '还没有头像 😓'\n            });\n\n            return false;\n          } //更改默认图片路径\n\n\n          _this5.user.avatar = ''; //触发插件移除\n\n          _this5.croppa.remove(); //成功提示\n\n\n          _this5.$message({\n            type: 'success',\n            message: '移除成功!'\n          });\n\n          _this5.user.avatar = '';\n\n          _this5.setuser(_this5.user);\n        }).catch(function (err) {\n          // eslint-disable-next-line no-console\n          console.log(err);\n        });\n      }).catch(function () {\n        _this5.$message({\n          type: 'info',\n          message: '已取消'\n        });\n      });\n    }\n  })\n};",null]}