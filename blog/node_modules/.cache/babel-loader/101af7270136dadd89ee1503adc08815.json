{"remainingRequest":"/usr/local/var/www/blog/blog/node_modules/thread-loader/dist/cjs.js!/usr/local/var/www/blog/blog/node_modules/babel-loader/lib/index.js!/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/usr/local/var/www/blog/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/local/var/www/blog/blog/src/components/loginOrRegister/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/local/var/www/blog/blog/src/components/loginOrRegister/login.vue","mtime":1544090090555},{"path":"/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/usr/local/var/www/blog/blog/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapMutations, mapActions } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      show: false,\n      ruleForm: {\n        account: '',\n        password: ''\n      },\n      errorMsg: '',\n      rules: {\n        account: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 20,\n          message: '长度在 3 到 20 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 20,\n          message: '长度在 3 到 20 个字符',\n          trigger: 'blur'\n        }]\n      },\n      fullscreenLoading: false\n    };\n  },\n  computed: _objectSpread({}, mapState([\"verbState\"]), mapActions([\"setUser\"])),\n  created: function created() {\n    this.fullscreenLoading = true;\n    if (localStorage.verbState === 'true') this.$router.push({\n      name: 'index'\n    });\n  },\n  mounted: function mounted() {\n    setTimeout(function () {\n      this.fullscreenLoading = false;\n    }.bind(this), 200);\n\n    if (localStorage.relogin === 'true') {\n      this.$message({\n        message: '登录过期，请重新登录',\n        type: 'warning'\n      });\n      localStorage.removeItem('relogin');\n    }\n  },\n  methods: _objectSpread({}, mapMutations({\n    setverbState: 'SET_VERBSTATE',\n    setToken: 'SET_TOKEN'\n  }), {\n    submitForm: function submitForm(formName) {\n      var _this = this;\n\n      this.errorMsg = '';\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var paramObj = {\n            username: _this.ruleForm.account,\n            password: _this.ruleForm.password\n          }; // console.log(this.$server);\n\n          _this.$server.login(paramObj).then(function (data) {\n            // console.log(data);\n            //用户的token\n            var token = data.access_token; //使用localStorage 存储登录信息\n\n            localStorage.setItem('access_token', token);\n            localStorage.setItem('verbState', 'true'); //把登录后的token 存储在vuex 中\n\n            _this.setverbState(true);\n\n            _this.setToken(token); //获取用户信息\n\n\n            _this.setUser; //登录成功后的提示信息\n\n            _this.$message({\n              message: '登录成功，开始您的流域',\n              type: 'success'\n            }); //登录成功跳转到首页\n\n\n            _this.$router.push({\n              name: 'index'\n            });\n          }).catch(function (err) {\n            if (err.status === 401) {\n              _this.$message.error('用户或密码错误');\n\n              localStorage.removeItem('relogin');\n              return false;\n            }\n          });\n        } else {\n          // console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    } //获取用户数据\n\n  })\n};",null]}