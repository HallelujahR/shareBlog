{"remainingRequest":"/usr/local/var/www/blog/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/local/var/www/blog/blog/src/components/loginOrRegister/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/local/var/www/blog/blog/src/components/loginOrRegister/login.vue","mtime":1544076579706},{"path":"/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapMutations, mapActions } from 'vuex'\n\nexport default {\n  data: function () {\n    return {\n      show: false,\n      ruleForm: {\n        account: '',\n        password: '',\n      },\n      errorMsg: '',\n      rules: {\n        account: [\n          { required: true, message: '请输入账号', trigger: 'blur' },\n          { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\n        ],\n      }\n    }\n  },\n  computed: {\n    ...mapState([\n      \"verbState\"\n    ]),\n    ...mapActions([\n      \"setUser\",\n    ]),\n\n  },\n  mounted: function () {\n    setTimeout(function () { this.show = true }, 200);\n    if (localStorage.relogin === 'true') {\n      this.$message({\n        message: '登录过期，请重新登录',\n        type: 'warning'\n      });\n      localStorage.removeItem('relogin')\n    }\n  },\n  methods: {\n    ...mapMutations({\n      setverbState: 'SET_VERBSTATE',\n      setToken: 'SET_TOKEN',\n    }),\n\n    submitForm: function (formName) {\n      this.errorMsg = '';\n      this.$refs[formName].validate((valid) => {\n\n\n        if (valid) {\n\n          let paramObj = {\n            username: this.ruleForm.account,\n            password: this.ruleForm.password,\n          };\n          // console.log(this.$server);\n          this.$server.login(paramObj).then(data => {\n            // console.log(data);\n            //用户的token\n            const token = data.access_token;\n\n            //使用localStorage 存储登录信息\n            localStorage.setItem('access_token', token);\n            localStorage.setItem('verbState', 'true');\n\n            //把登录后的token 存储在vuex 中\n            this.setverbState(true);\n            this.setToken(token);\n\n            //获取用户信息\n            this.setUser;\n\n            //登录成功后的提示信息\n            this.$message({\n              message: '登录成功，开始您的流域',\n              type: 'success'\n            });\n\n            //登录成功跳转到首页\n            this.$router.push({ name: 'index' })\n\n          })\n            .catch(err => {\n\n              if (err.status === 401) {\n\n                this.errorMsg = '用户或密码错误';\n                return false;\n\n              }\n            })\n\n        } else {\n          // console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm: function (formName) {\n      this.$refs[formName].resetFields();\n    },\n    register () {\n      this.$emit('reg', true);\n    },\n    //获取用户数据\n\n  }\n\n}\n",{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"login.vue","sourceRoot":"src/components/loginOrRegister","sourcesContent":["<style type=\"scoped\" lang=\"scss\">\n@import \"../../assets/css/login.scss\";\n</style>\n\n<template>\n  <div id=\"login\">\n    <div id=\"login-title\">\n      登录流域\n    </div>\n    <el-form :model=\"ruleForm\"\n             :rules=\"rules\"\n             ref=\"ruleForm\"\n             class=\"demo-ruleForm\">\n      <div class=\"login-user\">\n        <el-form-item prop=\"account\"\n                      :error=\"errorMsg\">\n          <el-input placeholder=\"输入账号\"\n                    suffix-icon=\"el-icon-phone\"\n                    v-model=\"ruleForm.account\"\n                    id=\"login-user-input\">\n          </el-input>\n        </el-form-item>\n      </div>\n      <div class=\"login-user\">\n        <el-form-item prop=\"password\">\n          <el-input placeholder=\"输入密码\"\n                    suffix-icon=\"el-icon-edit\"\n                    v-model=\"ruleForm.password\"\n                    id=\"login-user-input2\"\n                    type=\"password\">\n          </el-input>\n        </el-form-item>\n      </div>\n\n      <div class=\"login-user\">\n        <el-form-item>\n          <el-button class=\"login-btn\"\n                     type=\"primary\"\n                     @click=\"submitForm('ruleForm')\">立即登录</el-button>\n          <div class=\"register\">找回密码</div>\n          <div class=\"register\"\n               @click=\"register()\"\n               style=\"margin-left:200px;\">还没有账号？立即注册</div>\n        </el-form-item>\n      </div>\n    </el-form>\n\n    <div id=\"login-ds\">\n      <span style=\"float:left\">第三方登录:</span>\n      <img class=\"login-icon\"\n           width=\"40px;\"\n           src=\"../../assets/qqicon.png\" />\n      <img class=\"login-icon\"\n           width=\"40px;\"\n           src=\"../../assets/weibo.png\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations, mapActions } from 'vuex'\n\nexport default {\n  data: function () {\n    return {\n      show: false,\n      ruleForm: {\n        account: '',\n        password: '',\n      },\n      errorMsg: '',\n      rules: {\n        account: [\n          { required: true, message: '请输入账号', trigger: 'blur' },\n          { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\n        ],\n      }\n    }\n  },\n  computed: {\n    ...mapState([\n      \"verbState\"\n    ]),\n    ...mapActions([\n      \"setUser\",\n    ]),\n\n  },\n  mounted: function () {\n    setTimeout(function () { this.show = true }, 200);\n    if (localStorage.relogin === 'true') {\n      this.$message({\n        message: '登录过期，请重新登录',\n        type: 'warning'\n      });\n      localStorage.removeItem('relogin')\n    }\n  },\n  methods: {\n    ...mapMutations({\n      setverbState: 'SET_VERBSTATE',\n      setToken: 'SET_TOKEN',\n    }),\n\n    submitForm: function (formName) {\n      this.errorMsg = '';\n      this.$refs[formName].validate((valid) => {\n\n\n        if (valid) {\n\n          let paramObj = {\n            username: this.ruleForm.account,\n            password: this.ruleForm.password,\n          };\n          // console.log(this.$server);\n          this.$server.login(paramObj).then(data => {\n            // console.log(data);\n            //用户的token\n            const token = data.access_token;\n\n            //使用localStorage 存储登录信息\n            localStorage.setItem('access_token', token);\n            localStorage.setItem('verbState', 'true');\n\n            //把登录后的token 存储在vuex 中\n            this.setverbState(true);\n            this.setToken(token);\n\n            //获取用户信息\n            this.setUser;\n\n            //登录成功后的提示信息\n            this.$message({\n              message: '登录成功，开始您的流域',\n              type: 'success'\n            });\n\n            //登录成功跳转到首页\n            this.$router.push({ name: 'index' })\n\n          })\n            .catch(err => {\n\n              if (err.status === 401) {\n\n                this.errorMsg = '用户或密码错误';\n                return false;\n\n              }\n            })\n\n        } else {\n          // console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm: function (formName) {\n      this.$refs[formName].resetFields();\n    },\n    register () {\n      this.$emit('reg', true);\n    },\n    //获取用户数据\n\n  }\n\n}\n</script>"]}]}