{"remainingRequest":"/usr/local/var/www/blog/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/local/var/www/blog/blog/src/components/loginOrRegister/register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/local/var/www/blog/blog/src/components/loginOrRegister/register.vue","mtime":1544090083925},{"path":"/usr/local/var/www/blog/blog/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapMutations, mapActions } from 'vuex'\n\nexport default {\n  data () {\n    return {\n      show: false,\n      //表单数据\n      ruleForm: {\n        account: '',\n        password: '',\n        name: '',\n        yzm: '',\n        sms: '',\n      },\n      //验证码图片\n      captchas: '',\n      //验证码的key\n      captcha_key: '',\n      //是否显示验证码输入框\n      showcaptchas: false,\n      //是否显示短信验证\n      showSms: false,\n      //短信验证码的key\n      smskey: '',\n\n      //控制下一步按钮是否可以点击\n      isdis: false,\n      issendSms: false,\n\n      //自定义错误消息\n      errorMsg: '',\n      errorphone: '',\n      errorSms: '',\n      errorName: '',\n\n      //验证码刷新等待\n      isreloadYzm: true,\n\n      //注册按钮的显示\n      isZc: true,\n\n      fullscreenLoading: false,\n\n      rules: {\n        account: [\n          { required: true, message: '请输入账号', trigger: 'blur' },\n          { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' },\n          { pattern: /^1[34578]\\d{9}$/, message: '手机号格式不正确', trigger: 'blur' }\n        ],\n        yzm: [\n          { required: true, message: '请输入验证码', trigger: 'blur' }\n        ],\n        sms: [\n          { required: true, message: '请输入短信验证码', trigger: 'blur' }\n        ],\n        name: [\n          { required: true, message: '请输入昵称', trigger: 'blur' },\n          { min: 2, max: 10, message: '长度在 2 到 10 个字符', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          // {pattern:/^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/, message:\"请输入密码，不可以全是字母或数字,且长度在8位以上\",trigger:'blur'},\n          { min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur' }\n        ],\n\n      }\n    }\n  },\n  created: function () {\n    this.fullscreenLoading = true;\n    if (localStorage.verbState === 'true') this.$router.push({ name: 'index' })\n  },\n  mounted: function () {\n\n    setTimeout(function () { this.fullscreenLoading = false; }.bind(this), 200);\n\n  },\n  computed: {\n    ...mapActions([\n      'setUser',\n    ]),\n  },\n  methods: {\n    ...mapMutations({\n      setverbState: 'SET_VERBSTATE',\n      setToken: 'SET_TOKEN',\n    }),\n\n    register () {\n      this.$emit('log', true);\n    },\n    getCap (formName, field) {\n\n      //验证手机号是否正确进行下一步\n      this.errorphone = '';\n\n      //使用了element ui 的form组件 个别字段验证  验证手机号\n      this.$refs[formName].validateField(field, (valid) => {\n\n        if (valid === '') {\n\n          //验证手机获取图片验证码\n          let paramObj = {\n            phone: this.ruleForm.account,\n          };\n\n          this.$server.getCaptchas(paramObj).then(data => {\n\n            //把获取到的图片和key 传递给下一个步骤\n            this.captchas = data.captcha_image_content;\n            this.captcha_key = data.captcha_key;\n            this.showcaptchas = true;\n            this.isdis = true;\n            this.isreloadYzm = true;\n\n          }).catch(err => {\n\n            if (err.status === 422) {\n              this.errorphone = '电话号已存在';\n              return false;\n            }\n\n            if (err.status === 429) {\n              this.errorphone = '操作次数错过，请稍后再试';\n              this.showcaptchas = false;\n              return false;\n            }\n          })\n\n\n        }\n\n      })\n    },\n    //监听用户是否改变手机号 重新获取验证码\n    oninput () {\n      this.isdis = false;\n      this.showcaptchas = false;\n      this.ruleForm.yzm = '';\n    },\n    reloadYzm () {\n      this.isreloadYzm = false;\n      setTimeout(() => { this.getCap('ruleForm', 'account'); }, 500)\n    },\n    checkYzm (formName, field, event) {\n\n\n      //请空自定义消息\n      this.errorMsg = '';\n      //使用了element ui 的form组件 个别字段验证 验证 验证码\n      this.$refs[formName].validateField(field, (valid) => {\n\n        if (valid === '') {\n\n          let paramObj = {\n\n            captcha_key: this.captcha_key,\n            captcha_code: this.ruleForm.yzm,\n\n          };\n\n          this.$server.checkYzm(paramObj).then(data => {\n            let num = 60;\n\n            const time = setInterval(() => {\n\n              event.target.innerHTML = num;\n\n              num--;\n\n              if (num === 0) {\n\n                clearInterval(time);\n                this.issendSms = false;\n                event.target.innerHTML = '发送短信';\n\n              }\n\n            }, 1000);\n\n            this.issendSms = true;\n\n            //存入验证短信验证码的key\n            this.smskey = data.key;\n\n            //显示密码 昵称等输入框\n            this.showSms = true;\n\n          }).catch(err => {\n\n            if (err.status === 401) {\n              this.getCap('ruleForm', 'yzm');\n              this.errorMsg = '验证码错误';\n              return false;\n\n            } else if (err.status === 429) {\n\n              this.errorMsg = '操作次数过多，请稍后再试';\n              //让输入验证码input 消失\n              this.isdis = false;\n              this.showcaptchas = false;\n              this.ruleForm.yzm = '';\n              return false;\n\n            } else if (err.status === 422) {\n\n              this.errorMsg = '图片验证码已失效,点就图片重新获取';\n              return false;\n\n            }\n          });\n\n        }\n\n      })\n    },\n    //提交注册\n    regNow (formName, field1, field2, field3) {\n      // console.log(1);\n      //name\n      let name = '';\n      //pass\n      let pass = '';\n      //sms\n      // let sms = '';\n\n      //按钮控制\n      this.isZc = false;\n      //昵称验证\n      this.$refs[formName].validateField(field1, (valid) => {\n        name = valid;\n      });\n      //密码验证\n      this.$refs[formName].validateField(field2, (valid) => {\n        pass = valid;\n      });\n\n      //短信验证码验证\n      if (pass === '' && name === '') {\n\n        this.$refs[formName].validateField(field3, (valid) => {\n\n          if (valid === '') {\n\n            //判断短信验证码是否完成注册\n            let paramObj = {\n              verification_key: this.smskey,\n              password: this.ruleForm.password,\n              name: this.ruleForm.name,\n              phone: this.ruleForm.account,\n              verification_code: this.ruleForm.sms,\n\n            };\n\n            this.$server.regNow(paramObj).then(data => {\n\n              const token = data.meta.access_token;\n\n              //把注册后的token 存储在vuex 中 还有登录状态\n              this.setverbState(true);\n              this.setToken(token);\n\n\n              //使用localStorage 存储登录信息\n              localStorage.setItem('access_token', token);\n\n              localStorage.setItem('verbState', 'true');\n              //获取user基本信息\n              this.setUser;\n              //登录成功后的提示信息\n              this.$message({\n                message: '注册成功，开始您的流域',\n                type: 'success'\n              });\n\n              //判断按钮状态\n              this.isZc = true;\n\n              //跳转到主页\n              this.$router.push({ name: 'index' })\n\n            }).catch(err => {\n              // eslint-disable-next-line no-console\n              console.log(err);\n              if (err.status === 422) {\n\n                this.errorName = '昵称已存在';\n                //判断按钮状态\n                this.isZc = true;\n                return false;\n\n              } else if (err.status === 401) {\n\n                this.errorSms = '验证码错误';\n                //判断按钮状态\n                this.isZc = true;\n                return false;\n\n              } else if (err.status === 423) {\n\n                this.errorSms = '验证码失效，请重新发送';\n                this.getCap('ruleForm', 'account');\n                //判断按钮状态\n                this.isZc = true;\n                return false;\n\n              }\n\n            });\n\n          }\n\n        });\n      }\n\n\n    }\n\n  }\n\n}\n",null]}