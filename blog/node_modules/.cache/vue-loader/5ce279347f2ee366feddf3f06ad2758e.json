{"remainingRequest":"/usr/local/var/www/blog/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/local/var/www/blog/blog/src/components/function/editor.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/usr/local/var/www/blog/blog/src/components/function/editor.vue","mtime":1554094067729},{"path":"/usr/local/var/www/blog/blog/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/blog/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.editor {\n}\n.toolbar {\n  border: 1px solid #ccc;\n}\n.w-e-menu {\n  z-index: 1 !important;\n}\n.text {\n  width: 100%;\n  border: 1px solid #ccc;\n  height: 400px;\n}\n",{"version":3,"sources":["editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"editor.vue","sourceRoot":"src/components/function","sourcesContent":["<template lang=\"html\">\n\n  <div class=\"editor\">\n    <div ref=\"toolbar\" class=\"toolbar\">\n    </div>\n    <div ref=\"editor\" class=\"text\">\n    </div>\n  </div>\n</template>\n\n<script>\nimport E from 'wangeditor'\nlet editor = null\nexport default {\n  name: 'Editorbar',\n  data () {\n    return {\n      info_: null\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    isClear: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    isClear (val) {\n      // 触发清除文本域内容\n      if (val) {\n        editor.txt.clear()\n        this.info_ = null\n      }\n    },\n    value (val) {\n      // 使用 v-model 时,设置初始值\n      editor.txt.html(val)\n    }\n  },\n  mounted () {\n    this.seteditor()\n  },\n  methods: {\n    seteditor () {\n      editor = new E(this.$refs.toolbar, this.$refs.editor)\n      editor.customConfig.uploadImgShowBase64 = false // base 64 存储图片\n      editor.customConfig.uploadImgServer = this.$URL + '/images' // 配置服务器端地址\n      // editor.customConfig.uploadImgHeaders = { 'token': sessionStorage.getItem('token') }// 自定义 header\n      editor.customConfig.uploadFileName = 'image' // 后端接受上传文件的参数名\n      editor.customConfig.uploadImgMaxSize = 2 * 1024 * 1024 // 将图片大小限制为 2M\n      // editor.customConfig.uploadImgMaxLength = 6 // 限制一次最多上传 3 张图片\n      editor.customConfig.uploadImgTimeout = 3 * 60 * 1000 // 设置超时时间\n      // this.editor.customConfig.uploadParams = {formFile:'2'};\n      // 配置菜单\n      editor.customConfig.menus = [\n        'bold', // 粗体\n        'underline', // 下划线\n        'link', // 插入链接\n        'quote', // 引用\n        'emoticon', // 表情\n        'image', // 插入图片\n        'table', // 表格\n        'code', // 插入代码\n        'foreColor',//文字颜色\n\n      ]\n\n      editor.customConfig.uploadImgHooks = {\n        fail: (xhr, editor, result) => {\n          // 插入图片失败回调\n        },\n        success: (xhr, editor, result) => {\n          // 图片上传成功回调\n          //\n          // let imgUrl = result.data;\n          // insertImg(imgUrl)\n        },\n        timeout: (xhr, editor) => {\n          // 网络超时的回调\n        },\n        error: (xhr, editor) => {\n          console.log(editor)\n          // 图片上传错误的回调\n        },\n        customInsert: (insertImg, result, editor) => {\n          // 图片上传成功,插入图片的回调\n          console.log(result);\n          // if(result.code == 200){\n          var url = result.data;\n          insertImg(url)//将内容插入到富文本中\n          // console.log(insertImg(url)+\"DFDF\")\n          // console.log(data+\"dsfd\")\n          // }\n        }\n      };\n\n      editor.customConfig.onchange = (html) => {\n        this.info_ = html // 绑定当前逐渐地值\n        this.$emit('change', this.info_) // 将内容同步到父组件中\n        console.log(this.info_)\n      };\n\n      // 创建富文本编辑器\n      editor.create()\n    }\n  }\n}\n</script>\n\n<style lang=\"css\">\n.editor {\n}\n.toolbar {\n  border: 1px solid #ccc;\n}\n.w-e-menu {\n  z-index: 1 !important;\n}\n.text {\n  width: 100%;\n  border: 1px solid #ccc;\n  height: 400px;\n}\n</style>"]}]}